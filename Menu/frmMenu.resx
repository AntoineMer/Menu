<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>132, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ulYJrzkNM7KYLuB88fu6ai9t7K+7qBl7ifcAX3S2UjsgyR5ygx4mi5YzkJ1Z4y/fPEqXBXjt344HkTwu
        rkuQB+P0PdVelFPJu5lCCHPOo/5HdJFnpsB8JgsV1UVp9lqt+/WWzlvzPT9LlYNM9Zpv0jjqx7zYdPeq
        wdfA0zDgR93OsM3HTON67HFP5X7i2FJcF2UTuPGwUqq94LJA7HpO89cwP6SLciULY+cjBhTTZTd17hsM
        Zg3rKEN1dd1yMUeIJwnb6W3N6L5DfYFpPErjearRBaPn1U+51oLNF1M4NuqS9y/YGNRFOUAX52EKT7Ye
        KmDqNiZaiFia2YBxX36E2MG/CnTFVygXwUv0SNx/n9eHoANc1er6oqhOIknYyjSYFDV2rR58ltqQ+Zve
        8N3ET5UtPvX7ojMx+eDgifGCKKMBvIlygD8FAUb5MxvQ8d9ZPjiQIV4W8KjciBLnSsg3Os/hu+3cBSYL
        j+Iu4t//MNUl+gzO5qfjjT/eAfXNbx/2v34CL5XmUHUxkRQYDM+T/Qil2ejm7fHmpvClI2Szymg0qgiZ
        vkN94uEUU+Awr7V9GSRJU6zl9LupU45vUb9feK5Pd9L/oGP9D1FfMtF+z231P+eOqv7+2uo5e1mQaqO9
        Xq/b+3n4P0Czjs2vfyFEvPCEwTrYqSYiHX7WZhBE/x+KAcR7TCHcvwYbBuvf9qdPjhshS/Xl+ePTzPbv
        C+QHYr31rxlNU9ybvLlF7I9aq7N137mXXARePYgCsV/au44BWombvaz/Ch7xBYaJQ7WTz8xeiQx4TdnT
        aj/HlxyfKbz8MOvnQTLMt1j02musTuyfVjcZ5uvdaAbdzvKv4BEfovbgJYVpRU+3Xm89i0TsjVrHa8Xd
        1Oo5EugpHTsEYDGJDc9JxIbuD/TbaL+caqv7EFspu44cO258au+RyIxh14rly6TEUdBm3b2cySC+Sa2V
        mEwSRwH+zQOCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIIj/OIryf1SP5rOe
        NCt3AAAAAElFTkSuQmCC
</value>
  </data>
</root>